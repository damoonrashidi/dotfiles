[language-server.efm-lsp-prettier]
command = "efm-langserver"

[language-server.efm-lsp-prettier.config]
documentFormatting = true
languages = { typescript = [ { formatCommand ="prettier --stdin-filepath ${INPUT}", formatStdin = true } ] }

[language-server.marskman]
documentFormatting = true
command = "marksman"
languages = { markdown = [ { formatCommand ="prettier --stdin-filepath ${INPUT}", formatStdin = true } ] }

[[language]]
name = "svelte"
auto-format = true

[[language]]
name = "c-sharp"
scope = "source.cs"
injection-regex = "c-?sharp"
roots = ["sln", "csproj"]
file-types = ["cs"]
comment-token = "//"
indent = { tab-width = 4, unit = "    " }

[language-server.phpactor]
command = "phpactor"
args = ["language-server"]

[[language]]
name = "php"
scope = "source.php"
injection-regex = "php"
file-types = ["php", "inc", "php4", "php5", "phtml", "ctp"]
shebangs = ["php"]
roots = ["composer.json", "index.php"]
comment-token = "//"
language-servers = [ "intelephense", "phpactor" ]
indent = { tab-width = 4, unit = "    " }
formatter = { command = "bash", args = ['temp=$(mktemp) && cat > $temp && ./vendor/bin/pint --quiet $temp && cat $temp']}


[language-server.svelteserver.config.configuration.typescript]
inlayHints.parameterTypes.enabled = true
inlayHints.variableTypes.enabled = true
inlayHints.propertyDeclarationTypes.enabled = true
inlayHints.functionLikeReturnTypes.enabled = true
inlayHints.enumMemberValues.enabled = true
inlayHints.parameterNames.enabled = "all"

[language-server.svelteserver.config.configuration.javascript]
inlayHints.parameterTypes.enabled = true
inlayHints.variableTypes.enabled = true
inlayHints.propertyDeclarationTypes.enabled = true
inlayHints.functionLikeReturnTypes.enabled = true
inlayHints.enumMemberValues.enabled = true
inlayHints.parameterNames.enabled = "all"

[[language]]
name = "markdown"
auto-format = true
file-types = ["md", "mdx"]
language-servers = ["marksman"]
formatter = { command = "mdformat", args = ["-"] }

[[language]]
name = "typescript"
shebangs = ["deno"]
roots = ["deno.json", "deno.jsonc"]
file-types = ["js", "ts", "jsx", "tsx"]
language-servers = ["deno-lsp"]
auto-format = true

[language-server.deno-lsp]
command = "deno"
args = ["lsp"]
environment = { NO_COLOR = "1" }

[language-server.deno-lsp.config.deno]
enable = false

[language-server.omnisharp]
command = "dotnet"
args = ["/Users/damoonrashidi/.dotnet/omnisharp/OmniSharp.dll", "--lsp", "--stdio"]

